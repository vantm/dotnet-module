name: .NET

on:
  push:
    branches: [ "master" ]
    paths:
      - source/**
  pull_request:
    branches: [ "master" ]
    types: [ opened, synchronize, reopened ]
    paths:
      - source/**
  workflow_dispatch:

jobs:
  build:
    name: Build
    defaults:
      run:
        working-directory: source

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
 
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: ./.sonar/scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: bash
      run: |
        mkdir -p .sonar/scanner
        dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

    - name: Restore .NET dependencies
      run: dotnet restore
    
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: bash
      run: |
        .sonar/scanner/dotnet-sonarscanner begin /k:"vantm_base" /o:"tmvan" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --no-restore
        .sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
